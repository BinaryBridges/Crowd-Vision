apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: app
  labels: { app: redis }
spec:
  replicas: 1
  selector: { matchLabels: { app: redis } }
  template:
    metadata:
      labels: { app: redis }
    spec:
      serviceAccountName: app-sa
      containers:
        - name: redis
          image: redis:7-alpine
          args:
            - redis-server
            - --maxmemory
            - "2gb"
            - --maxmemory-policy
            - allkeys-lru
            - --save
            - "900"
            - "1"
            - --appendonly
            - "yes"
            - --appendfsync
            - everysec
          ports:
            - containerPort: 6379
              name: redis
          resources:
            requests: { cpu: "200m", memory: "2Gi" }
            limits:   { cpu: "1000m", memory: "2Gi" }
          livenessProbe:
            tcpSocket:
              port: 6379
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            exec:
              command:
                - redis-cli
                - ping
            initialDelaySeconds: 5
            periodSeconds: 5
          volumeMounts:
            - name: redis-data
              mountPath: /data
      volumes:
        - name: redis-data
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: app
  labels: { app: redis }
spec:
  selector: { app: redis }
  ports:
    - name: redis
      port: 6379
      targetPort: 6379
  type: ClusterIP
